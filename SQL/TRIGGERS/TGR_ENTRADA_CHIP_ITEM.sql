ALTER TRIGGER TGR_ENTRADA_CHIP_ITEM ON CG_ENTRADA_CHIP_ITEM 
FOR INSERT, DELETE
AS
BEGIN

DECLARE @TIPO_OP CHAR(1), @ID_ROMANEIO INT, @ID_TRANSACAO CHAR(3)
DECLARE @ID_LOCAL_DE INT, @ID_LOCAL_PARA INT, @ENTRADA_SAIDA CHAR(1)
DECLARE @OBS VARCHAR(200),@ID_CHIP INT

IF EXISTS (SELECT * FROM INSERTED) AND NOT EXISTS (SELECT * FROM DELETED)
BEGIN
    SET @TIPO_OP = 'I' /*INSERT*/
    SET @ID_TRANSACAO = 'EIC'

    SELECT distinct @ID_ROMANEIO = i.ID_ROMANEIO, @ID_CHIP = i.ID_CHIP
    FROM inserted i
END

IF NOT EXISTS (SELECT * FROM INSERTED) AND EXISTS (SELECT * FROM DELETED)
BEGIN
    SET @TIPO_OP = 'D' /*DELETE*/
    SET @ID_TRANSACAO = 'EEC'

    SELECT distinct @ID_ROMANEIO = d.ID_ROMANEIO, @ID_CHIP = d.ID_CHIP
    FROM deleted d
END

DECLARE @ID_LOJA INT,  
	   @ROMANEIO_ESTOQUE INT


SELECT  @ID_LOJA = a.ID_LOJA,  
	   @ROMANEIO_ESTOQUE = a.ROMANEIO_ESTOQUE
FROM CG_ENTRADA_CHIP a
where a.ID_ROMANEIO = @ID_ROMANEIO

IF @TIPO_OP = 'I'
BEGIN
    SET @ID_LOCAL_DE = 0
    SET @ID_LOCAL_PARA = @ID_LOJA
    SET @ENTRADA_SAIDA = 'E'
    SET @OBS = 'ENTRADA - INCLUSAO CHIP'
END

IF @TIPO_OP = 'D'
BEGIN
    SET @ID_LOCAL_DE = @ID_LOJA
    SET @ID_LOCAL_PARA = 0
    SET @ENTRADA_SAIDA = 'S'
    SET @OBS = 'ENTRADA - ESTORNO CHIP'
END

INSERT INTO ROMANEIO_ESTOQUE_ITEM
           ([ROMANEIO]
           ,[UNIQUE_KEY]
           ,[ID_TRANSACAO]
           ,[TRANSITO]
           ,[ID_LOCAL_DE]
           ,[ID_LOCAL_PARA]
           ,[DATAMOV]
           ,[ENTRADA_SAIDA]
           ,[QUANTIDADE]
           ,[OBSERVACAO]
		 ,[ID_PRODUTO])
     VALUES
           (@ROMANEIO_ESTOQUE
           ,NEWID()
           ,@ID_TRANSACAO
           ,0 /*FALSE PARA TRANSITO*/
           ,@ID_LOCAL_DE
           ,@ID_LOCAL_PARA
           ,GETDATE()
           ,@ENTRADA_SAIDA
           ,1
           ,@OBS
		 ,@ID_CHIP)

END

