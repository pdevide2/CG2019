<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAAAAAAAD/2wBDAAkGBwgHBgkIBwgKFgkXDRYPDQwMDSIUFRwWHx0iLiAkHyQs
        MTQiJCQsJyUrKzEkJik3LzowLCQzRDMtQygtLyv/2wBDAQoKCg0MDRoPDxo3JR8lNzg3Nzc3ODQ3MjY3
        ODc3Nzc3Nzc4Kzg1NCw3NDQ0Nzc3Nys0LDcsNDg3KzQ3NzcuMiv/wAARCABAAEADASIAAhEBAxEB/8QA
        GwAAAgMBAQEAAAAAAAAAAAAAAAUEBgcDAgH/xAAyEAABAwMDAwEFBwUAAAAAAAABAgMEAAUREiExBkFR
        ExQzYXKRIjJScYGxwSNCgrPR/8QAGQEBAAMBAQAAAAAAAAAAAAAAAAIDBAUG/8QAHhEAAwACAgMBAAAA
        AAAAAAAAAAECAxEEIRIiQQX/2gAMAwEAAhEDEQA/ANxoopb1FPNttEiQj3mnCAPJoD3KujDCyjW3q3BU
        4vSnPjPc/kKUL6rEV0e2MNlju9HdCwPmHIHx4pf01077UgSrooqdIClknzwlPgD4f9pxdulLZPhrZQwE
        L0kJWgkUA5jyGpLQdYWCg9661n/QEiVbn12mYsnQstpJ505wM/EHH6EeK0CgCiiigClHU7aXbeEr41FX
        0SabEgAk8VXuobghyMW22ndtX2tG33TQDGxY9i2/F/ApjVVs96UwwWzEWU6s6irHYdqaC/xAMuJcG3jN
        AVobdXK095Kx/rq91nSZjS+qEvBX9MzF7q22w3zWiJUladSFAjyDmgPtFFFAc3/cOfKax3rC+Tz1Ei0Q
        n3EM+mnUlKsZURk5+GK2KR7hz5TWR9aR2Y1xjXJSh6ygG1p52TwfI5xULrxlslC8qSJ9tjXKPHSpUhK2
        9stlZ3qWuZJR963K/wAHKR2+5+0uNx/UITyog8Cl/VPrW91t+3S3yvWOTVWLNvqi3Ji13I9MZh5bjhhy
        QrJc0lRxnbPw3x4p50a7JVeFBzQlotkhlJye25NQYouBacS44zj0zuO1c+nj6N6xFcK5RSQpROwGDWgo
        NLzRkUtjxJKgFPvb+BU1LQR/caAS9W3MwIiG2lD11nQAew7mqbNs0efGy+o6/wAY5q0dYWSXcHmJUJOo
        pSpKms4O+NxnbtSVuHc0o0KgSs8e7P78VpxrG41X0z5HavckBqyNW+O7AQ6lS1BKkOhONiP4pFHttwdn
        gy46jHSc5UNIV4I/erk5Yry8lp5MZI0t6ShbgCzzwOPqRXKS++ytYeYeScaUhbZGw4rzP63J5ODLrDHq
        ktPWzp8ZTUt0+2LYCYWp9sPPAhs6kFVHqPRSl2M1oZBwDwo7GvttTIbnuLct8gpUj7DnoEjV4G1WCL09
        NuC0uT8IZ5DXKv17D8h9a63GyVlwzdrTZmtKaaR5tV2mLwNZNWWIH3cKdzivUK1xoaQG0DPk1OG3FXkT
        /9k=
</value>
  </data>
</root>